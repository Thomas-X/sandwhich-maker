// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fertilizerpb/fertilizer.proto

package fertilizerpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetFertilizerRequest struct {
	Amount               int32    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFertilizerRequest) Reset()         { *m = GetFertilizerRequest{} }
func (m *GetFertilizerRequest) String() string { return proto.CompactTextString(m) }
func (*GetFertilizerRequest) ProtoMessage()    {}
func (*GetFertilizerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_003190ce24442e3e, []int{0}
}

func (m *GetFertilizerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFertilizerRequest.Unmarshal(m, b)
}
func (m *GetFertilizerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFertilizerRequest.Marshal(b, m, deterministic)
}
func (m *GetFertilizerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFertilizerRequest.Merge(m, src)
}
func (m *GetFertilizerRequest) XXX_Size() int {
	return xxx_messageInfo_GetFertilizerRequest.Size(m)
}
func (m *GetFertilizerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFertilizerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFertilizerRequest proto.InternalMessageInfo

func (m *GetFertilizerRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type GetFertilizerResponse struct {
	Price                int32    `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFertilizerResponse) Reset()         { *m = GetFertilizerResponse{} }
func (m *GetFertilizerResponse) String() string { return proto.CompactTextString(m) }
func (*GetFertilizerResponse) ProtoMessage()    {}
func (*GetFertilizerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_003190ce24442e3e, []int{1}
}

func (m *GetFertilizerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFertilizerResponse.Unmarshal(m, b)
}
func (m *GetFertilizerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFertilizerResponse.Marshal(b, m, deterministic)
}
func (m *GetFertilizerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFertilizerResponse.Merge(m, src)
}
func (m *GetFertilizerResponse) XXX_Size() int {
	return xxx_messageInfo_GetFertilizerResponse.Size(m)
}
func (m *GetFertilizerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFertilizerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFertilizerResponse proto.InternalMessageInfo

func (m *GetFertilizerResponse) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*GetFertilizerRequest)(nil), "fertilizer.GetFertilizerRequest")
	proto.RegisterType((*GetFertilizerResponse)(nil), "fertilizer.GetFertilizerResponse")
}

func init() { proto.RegisterFile("fertilizerpb/fertilizer.proto", fileDescriptor_003190ce24442e3e) }

var fileDescriptor_003190ce24442e3e = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0x4b, 0x2d, 0x2a,
	0xc9, 0xcc, 0xc9, 0xac, 0x4a, 0x2d, 0x2a, 0x48, 0xd2, 0x47, 0x70, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b,
	0xf2, 0x85, 0xb8, 0x10, 0x22, 0x4a, 0x7a, 0x5c, 0x22, 0xee, 0xa9, 0x25, 0x6e, 0x70, 0x81, 0xa0,
	0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x31, 0x2e, 0xb6, 0xc4, 0xdc, 0xfc, 0xd2, 0xbc, 0x12,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x28, 0x4f, 0x49, 0x97, 0x4b, 0x14, 0x4d, 0x7d, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x08, 0x17, 0x6b, 0x41, 0x51, 0x66, 0x72, 0x2a, 0x54, 0x3d,
	0x84, 0x63, 0x94, 0xcd, 0x25, 0x88, 0x50, 0x1b, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x14,
	0xc6, 0xc5, 0x8b, 0x62, 0x86, 0x90, 0x82, 0x1e, 0x92, 0x1b, 0xb1, 0x39, 0x47, 0x4a, 0x11, 0x8f,
	0x0a, 0x88, 0x03, 0x94, 0x18, 0x9c, 0xf8, 0xa2, 0x78, 0x90, 0x3d, 0x9e, 0xc4, 0x06, 0xf6, 0xae,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x79, 0x8c, 0x00, 0x8d, 0x0f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FertilizerServiceClient is the client API for FertilizerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FertilizerServiceClient interface {
	GetFertilizer(ctx context.Context, in *GetFertilizerRequest, opts ...grpc.CallOption) (*GetFertilizerResponse, error)
}

type fertilizerServiceClient struct {
	cc *grpc.ClientConn
}

func NewFertilizerServiceClient(cc *grpc.ClientConn) FertilizerServiceClient {
	return &fertilizerServiceClient{cc}
}

func (c *fertilizerServiceClient) GetFertilizer(ctx context.Context, in *GetFertilizerRequest, opts ...grpc.CallOption) (*GetFertilizerResponse, error) {
	out := new(GetFertilizerResponse)
	err := c.cc.Invoke(ctx, "/fertilizer.FertilizerService/GetFertilizer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FertilizerServiceServer is the server API for FertilizerService service.
type FertilizerServiceServer interface {
	GetFertilizer(context.Context, *GetFertilizerRequest) (*GetFertilizerResponse, error)
}

// UnimplementedFertilizerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFertilizerServiceServer struct {
}

func (*UnimplementedFertilizerServiceServer) GetFertilizer(ctx context.Context, req *GetFertilizerRequest) (*GetFertilizerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFertilizer not implemented")
}

func RegisterFertilizerServiceServer(s *grpc.Server, srv FertilizerServiceServer) {
	s.RegisterService(&_FertilizerService_serviceDesc, srv)
}

func _FertilizerService_GetFertilizer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFertilizerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FertilizerServiceServer).GetFertilizer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fertilizer.FertilizerService/GetFertilizer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FertilizerServiceServer).GetFertilizer(ctx, req.(*GetFertilizerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FertilizerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fertilizer.FertilizerService",
	HandlerType: (*FertilizerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFertilizer",
			Handler:    _FertilizerService_GetFertilizer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fertilizerpb/fertilizer.proto",
}
