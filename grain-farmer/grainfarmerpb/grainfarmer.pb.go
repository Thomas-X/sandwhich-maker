// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grainfarmerpb/grainfarmer.proto

package grainfarmerpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetGrainRequest struct {
	BreadName            string   `protobuf:"bytes,1,opt,name=breadName,proto3" json:"breadName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGrainRequest) Reset()         { *m = GetGrainRequest{} }
func (m *GetGrainRequest) String() string { return proto.CompactTextString(m) }
func (*GetGrainRequest) ProtoMessage()    {}
func (*GetGrainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_087b5cc7ba047e58, []int{0}
}

func (m *GetGrainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGrainRequest.Unmarshal(m, b)
}
func (m *GetGrainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGrainRequest.Marshal(b, m, deterministic)
}
func (m *GetGrainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGrainRequest.Merge(m, src)
}
func (m *GetGrainRequest) XXX_Size() int {
	return xxx_messageInfo_GetGrainRequest.Size(m)
}
func (m *GetGrainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGrainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGrainRequest proto.InternalMessageInfo

func (m *GetGrainRequest) GetBreadName() string {
	if m != nil {
		return m.BreadName
	}
	return ""
}

type GetGrainResponse struct {
	Grain                int32    `protobuf:"varint,1,opt,name=grain,proto3" json:"grain,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGrainResponse) Reset()         { *m = GetGrainResponse{} }
func (m *GetGrainResponse) String() string { return proto.CompactTextString(m) }
func (*GetGrainResponse) ProtoMessage()    {}
func (*GetGrainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_087b5cc7ba047e58, []int{1}
}

func (m *GetGrainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGrainResponse.Unmarshal(m, b)
}
func (m *GetGrainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGrainResponse.Marshal(b, m, deterministic)
}
func (m *GetGrainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGrainResponse.Merge(m, src)
}
func (m *GetGrainResponse) XXX_Size() int {
	return xxx_messageInfo_GetGrainResponse.Size(m)
}
func (m *GetGrainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGrainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGrainResponse proto.InternalMessageInfo

func (m *GetGrainResponse) GetGrain() int32 {
	if m != nil {
		return m.Grain
	}
	return 0
}

func (m *GetGrainResponse) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*GetGrainRequest)(nil), "grainfarmer.GetGrainRequest")
	proto.RegisterType((*GetGrainResponse)(nil), "grainfarmer.GetGrainResponse")
}

func init() { proto.RegisterFile("grainfarmerpb/grainfarmer.proto", fileDescriptor_087b5cc7ba047e58) }

var fileDescriptor_087b5cc7ba047e58 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x2f, 0x4a, 0xcc,
	0xcc, 0x4b, 0x4b, 0x2c, 0xca, 0x4d, 0x2d, 0x2a, 0x48, 0xd2, 0x47, 0xe2, 0xe9, 0x15, 0x14, 0xe5,
	0x97, 0xe4, 0x0b, 0x71, 0x23, 0x09, 0x29, 0xe9, 0x73, 0xf1, 0xbb, 0xa7, 0x96, 0xb8, 0x83, 0x44,
	0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x64, 0xb8, 0x38, 0x93, 0x8a, 0x52, 0x13, 0x53,
	0xfc, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x10, 0x02, 0x4a, 0x76, 0x5c,
	0x02, 0x08, 0x0d, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x22, 0x5c, 0xac, 0x60, 0x33, 0xc1,
	0xaa, 0x59, 0x83, 0x20, 0x1c, 0x90, 0x68, 0x41, 0x51, 0x66, 0x72, 0xaa, 0x04, 0x13, 0x44, 0x14,
	0xcc, 0x31, 0x8a, 0xe5, 0x12, 0x02, 0x6b, 0x76, 0x03, 0xdb, 0x1f, 0x9c, 0x5a, 0x54, 0x96, 0x99,
	0x9c, 0x2a, 0xe4, 0xce, 0xc5, 0x01, 0x33, 0x55, 0x48, 0x46, 0x0f, 0xd9, 0xcd, 0x68, 0xae, 0x93,
	0x92, 0xc5, 0x21, 0x0b, 0x71, 0x8a, 0x13, 0x7f, 0x14, 0x2f, 0x8a, 0xff, 0x93, 0xd8, 0xc0, 0x9e,
	0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xad, 0x71, 0x6b, 0x3a, 0x17, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrainFarmerServiceClient is the client API for GrainFarmerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrainFarmerServiceClient interface {
	GetGrain(ctx context.Context, in *GetGrainRequest, opts ...grpc.CallOption) (*GetGrainResponse, error)
}

type grainFarmerServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrainFarmerServiceClient(cc *grpc.ClientConn) GrainFarmerServiceClient {
	return &grainFarmerServiceClient{cc}
}

func (c *grainFarmerServiceClient) GetGrain(ctx context.Context, in *GetGrainRequest, opts ...grpc.CallOption) (*GetGrainResponse, error) {
	out := new(GetGrainResponse)
	err := c.cc.Invoke(ctx, "/grainfarmer.GrainFarmerService/GetGrain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrainFarmerServiceServer is the server API for GrainFarmerService service.
type GrainFarmerServiceServer interface {
	GetGrain(context.Context, *GetGrainRequest) (*GetGrainResponse, error)
}

// UnimplementedGrainFarmerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGrainFarmerServiceServer struct {
}

func (*UnimplementedGrainFarmerServiceServer) GetGrain(ctx context.Context, req *GetGrainRequest) (*GetGrainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGrain not implemented")
}

func RegisterGrainFarmerServiceServer(s *grpc.Server, srv GrainFarmerServiceServer) {
	s.RegisterService(&_GrainFarmerService_serviceDesc, srv)
}

func _GrainFarmerService_GetGrain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrainFarmerServiceServer).GetGrain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grainfarmer.GrainFarmerService/GetGrain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrainFarmerServiceServer).GetGrain(ctx, req.(*GetGrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrainFarmerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grainfarmer.GrainFarmerService",
	HandlerType: (*GrainFarmerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGrain",
			Handler:    _GrainFarmerService_GetGrain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grainfarmerpb/grainfarmer.proto",
}
