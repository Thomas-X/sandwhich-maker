// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lettucefarmerpb/lettucefarmer.proto

package lettucefarmerpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetLettuceRequest struct {
	Lettuces             []string `protobuf:"bytes,1,rep,name=lettuces,proto3" json:"lettuces,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLettuceRequest) Reset()         { *m = GetLettuceRequest{} }
func (m *GetLettuceRequest) String() string { return proto.CompactTextString(m) }
func (*GetLettuceRequest) ProtoMessage()    {}
func (*GetLettuceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_309f08d0ef0c224e, []int{0}
}

func (m *GetLettuceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLettuceRequest.Unmarshal(m, b)
}
func (m *GetLettuceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLettuceRequest.Marshal(b, m, deterministic)
}
func (m *GetLettuceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLettuceRequest.Merge(m, src)
}
func (m *GetLettuceRequest) XXX_Size() int {
	return xxx_messageInfo_GetLettuceRequest.Size(m)
}
func (m *GetLettuceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLettuceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLettuceRequest proto.InternalMessageInfo

func (m *GetLettuceRequest) GetLettuces() []string {
	if m != nil {
		return m.Lettuces
	}
	return nil
}

type Lettuce struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lettuce) Reset()         { *m = Lettuce{} }
func (m *Lettuce) String() string { return proto.CompactTextString(m) }
func (*Lettuce) ProtoMessage()    {}
func (*Lettuce) Descriptor() ([]byte, []int) {
	return fileDescriptor_309f08d0ef0c224e, []int{1}
}

func (m *Lettuce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lettuce.Unmarshal(m, b)
}
func (m *Lettuce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lettuce.Marshal(b, m, deterministic)
}
func (m *Lettuce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lettuce.Merge(m, src)
}
func (m *Lettuce) XXX_Size() int {
	return xxx_messageInfo_Lettuce.Size(m)
}
func (m *Lettuce) XXX_DiscardUnknown() {
	xxx_messageInfo_Lettuce.DiscardUnknown(m)
}

var xxx_messageInfo_Lettuce proto.InternalMessageInfo

func (m *Lettuce) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lettuce) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type GetLettuceResponse struct {
	Lettuces             []*Lettuce `protobuf:"bytes,1,rep,name=lettuces,proto3" json:"lettuces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetLettuceResponse) Reset()         { *m = GetLettuceResponse{} }
func (m *GetLettuceResponse) String() string { return proto.CompactTextString(m) }
func (*GetLettuceResponse) ProtoMessage()    {}
func (*GetLettuceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_309f08d0ef0c224e, []int{2}
}

func (m *GetLettuceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLettuceResponse.Unmarshal(m, b)
}
func (m *GetLettuceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLettuceResponse.Marshal(b, m, deterministic)
}
func (m *GetLettuceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLettuceResponse.Merge(m, src)
}
func (m *GetLettuceResponse) XXX_Size() int {
	return xxx_messageInfo_GetLettuceResponse.Size(m)
}
func (m *GetLettuceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLettuceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLettuceResponse proto.InternalMessageInfo

func (m *GetLettuceResponse) GetLettuces() []*Lettuce {
	if m != nil {
		return m.Lettuces
	}
	return nil
}

func init() {
	proto.RegisterType((*GetLettuceRequest)(nil), "lettucefarmer.GetLettuceRequest")
	proto.RegisterType((*Lettuce)(nil), "lettucefarmer.Lettuce")
	proto.RegisterType((*GetLettuceResponse)(nil), "lettucefarmer.GetLettuceResponse")
}

func init() {
	proto.RegisterFile("lettucefarmerpb/lettucefarmer.proto", fileDescriptor_309f08d0ef0c224e)
}

var fileDescriptor_309f08d0ef0c224e = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xce, 0x49, 0x2d, 0x29,
	0x29, 0x4d, 0x4e, 0x4d, 0x4b, 0x2c, 0xca, 0x4d, 0x2d, 0x2a, 0x48, 0xd2, 0x47, 0xe1, 0xeb, 0x15,
	0x14, 0xe5, 0x97, 0xe4, 0x0b, 0xf1, 0xa2, 0x08, 0x2a, 0xe9, 0x73, 0x09, 0xba, 0xa7, 0x96, 0xf8,
	0x40, 0xc4, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0xa0, 0xaa, 0x8a,
	0x25, 0x18, 0x15, 0x98, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x25, 0x63, 0x2e, 0x76, 0xa8, 0x6a, 0x21,
	0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b,
	0x48, 0x84, 0x8b, 0xb5, 0xa0, 0x28, 0x33, 0x39, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x08,
	0xc2, 0x51, 0xf2, 0xe0, 0x12, 0x42, 0xb6, 0xa5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0xc8, 0x08,
	0xcd, 0x1a, 0x6e, 0x23, 0x31, 0x3d, 0x54, 0x27, 0xc3, 0x74, 0xc0, 0xd5, 0x19, 0xa5, 0x72, 0xf1,
	0x41, 0x05, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x82, 0xb9, 0xb8, 0x10, 0x66, 0x0b,
	0x29, 0xa0, 0x99, 0x80, 0xe1, 0x39, 0x29, 0x45, 0x3c, 0x2a, 0x20, 0x0e, 0x53, 0x62, 0x70, 0x12,
	0x8c, 0xe2, 0x47, 0x0b, 0xcc, 0x24, 0x36, 0x70, 0xf8, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xba, 0x7b, 0xa3, 0x57, 0x66, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LettuceServiceClient is the client API for LettuceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LettuceServiceClient interface {
	GetLettuce(ctx context.Context, in *GetLettuceRequest, opts ...grpc.CallOption) (*GetLettuceResponse, error)
}

type lettuceServiceClient struct {
	cc *grpc.ClientConn
}

func NewLettuceServiceClient(cc *grpc.ClientConn) LettuceServiceClient {
	return &lettuceServiceClient{cc}
}

func (c *lettuceServiceClient) GetLettuce(ctx context.Context, in *GetLettuceRequest, opts ...grpc.CallOption) (*GetLettuceResponse, error) {
	out := new(GetLettuceResponse)
	err := c.cc.Invoke(ctx, "/lettucefarmer.LettuceService/GetLettuce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LettuceServiceServer is the server API for LettuceService service.
type LettuceServiceServer interface {
	GetLettuce(context.Context, *GetLettuceRequest) (*GetLettuceResponse, error)
}

// UnimplementedLettuceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLettuceServiceServer struct {
}

func (*UnimplementedLettuceServiceServer) GetLettuce(ctx context.Context, req *GetLettuceRequest) (*GetLettuceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLettuce not implemented")
}

func RegisterLettuceServiceServer(s *grpc.Server, srv LettuceServiceServer) {
	s.RegisterService(&_LettuceService_serviceDesc, srv)
}

func _LettuceService_GetLettuce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLettuceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LettuceServiceServer).GetLettuce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lettucefarmer.LettuceService/GetLettuce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LettuceServiceServer).GetLettuce(ctx, req.(*GetLettuceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LettuceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lettucefarmer.LettuceService",
	HandlerType: (*LettuceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLettuce",
			Handler:    _LettuceService_GetLettuce_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lettucefarmerpb/lettucefarmer.proto",
}
